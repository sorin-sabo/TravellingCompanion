# Generated by Django 4.0 on 2021-12-21 22:40

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login',
                 models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(
                    default=False,
                    help_text='Designates that this user has all '
                              'permissions without explicitly assigning them.',
                    verbose_name='superuser status')),
                ('id', models.AutoField(db_column='user_id', primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True,
                                            validators=[django.core.validators.EmailValidator()])),
                ('status', models.BooleanField(
                    default=True,
                    help_text='Designates whether the user is active or not.',
                    verbose_name='active status')),
                ('is_staff', models.BooleanField(
                    default=False,
                    help_text='Designates whether the user can log into this admin site.',
                    verbose_name='staff status')),
                ('groups', models.ManyToManyField(
                    blank=True,
                    help_text='The groups this user belongs to. A user will get all '
                              'permissions granted to each of their groups.',
                    related_name='user_set',
                    related_query_name='user', to='auth.Group',
                    verbose_name='groups')),
                ('user_permissions',
                 models.ManyToManyField(
                     blank=True, help_text='Specific permissions for this user.',
                     related_name='user_set', related_query_name='user',
                     to='auth.Permission', verbose_name='user permissions')),
                ('last_login_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, blank=True, null=True)),
            ],
            options={
                'verbose_name': 'User',
                'db_table': 'user',
            },
        ),
    ]
